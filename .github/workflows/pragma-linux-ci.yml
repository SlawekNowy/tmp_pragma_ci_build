name: Build Linux
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

#concurrency:
#  group: environment-lin-${{ github.ref }}
#  cancel-in-progress: true

jobs:
  build:
    name: Build - ${{ matrix.config.os }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
          - os: ubuntu-22.04
            name: "Ubuntu GCC-11"
            artifact: "ubuntu_gcc.7z"
            build_type: "RelWithDebInfo"
            cc: "clang-14"
            cxx: "clang++-14"
            archiver: "7z a"
            generators: "Unix Makefiles"
            build_dir: 'build'
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      - name: Install Prerequisites
        shell: bash
        run: |
          sudo apt install build-essential
          sudo add-apt-repository ppa:savoury1/llvm-defaults-14
          sudo apt update
          sudo apt install clang-14
          sudo apt install libstdc++-12-dev
          sudo apt install libstdc++6

          # Vulkan
          sudo apt-get install libxcb-keysyms1-dev
          sudo apt-get install xcb libxcb-xkb-dev x11-xkb-utils libx11-xcb-dev libxkbcommon-x11-dev

          # GLFW
          sudo apt install xorg-dev

          # OIDN
          sudo apt install git-lfs

          # Cycles
          sudo apt-get install subversion

          # Curl
          sudo apt-get install libssl-dev
          sudo apt install libssh2-1

          # OIIO
          sudo apt-get install python3-distutils

          # TODO: Install CMake
          # TODO: Install Vulkan SDK

      - name: Prepare Vulkan SDK
        uses: humbletim/setup-vulkan-sdk@v1.2.0
        with:
          vulkan-query-version: 1.3.211.0
          vulkan-components: Vulkan-Headers, Vulkan-Loader, Glslang
          vulkan-use-cache: true

      - name: Download Pragma
        shell: bash
        run: |
          git clone https://github.com/Silverlan/pragma.git --recurse-submodules
          cp linux/pragma_build_linux.sh pragma/build_scripts/build_linux.sh
          cp pr_prosper_vulkan_CMakeLists.txt pragma/modules/pr_prosper_vulkan/CMakeLists.txt

      - name: Preprocessing
        shell: bash
        run: |
          cp CMakeLists.txt pragma/

      - name: Setup Pragma
        shell: bash
        run: |
          cd pragma
          # bash ./build_scripts/build_linux.sh
          bash ./build_scripts/build_linux.sh --build_directory="$PWD/build" --deps_directory="$PWD/deps" --install_directory="$PWD/install"
          echo "All Files:"
          ls -R
          echo "---"

      - name: Build Pragma
        shell: bash
        run: |
          cd pragma/build
          cmake --build "." --config RelWithDebInfo --target pragma-install-full
          
      - name: Create Release Files
        shell: bash
        run: |
          mkdir release
          rsync -r pragma/build/install/ release/

      - name: Release Binaries
        uses: Silverlan/common_actions/release_nightly_binaries@main
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit: ${{ github.ref_name }}
          
      - name: Handle Error
        uses: Silverlan/common_actions/action_handle_error@main
        if: failure()
        
