name: Build Windows
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

concurrency:
  group: environment-win-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build - ${{ matrix.config.os }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
          - os: windows-latest
            name: "Windows x64 MSVC"
            artifact: "Windows-MSVC.tar.xz"
            build_type: "RelWithDebInfo"
            environment_script: "C:/Program Files/Microsoft Visual Studio/2022/Enterprise/VC/Auxiliary/Build/VsDevCmd.bat"
            cc: "cl"
            cxx: "cl"
            archiver: "7z a"
            generators: "Visual Studio 16 2022"
            build_dir: 'build'
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      - name: Build Pragma
        shell: pwsh
        run: |
          $vcvarsScript="C:/Program Files/Microsoft Visual Studio/2022/Enterprise/Common7/Tools/VsDevCmd.bat -host_arch=amd64 -arch=amd64"

          $vcvarsScriptPath=Split-Path $vcvarsScript -Parent
          $vcvarsScriptFile=Split-Path $vcvarsScript -leaf
          # See https://stackoverflow.com/a/2124759/1879228
          pushd "$vcvarsScriptPath"
          cmd /c "$vcvarsScriptFile&set" |
          foreach {
            if ($_ -match "=") {
              $v = $_.split("=", 2); set-item -force -path "ENV:\$($v[0])"  -value "$($v[1])" 
            }
          }
          popd
          Write-Host "`nVisual Studio 2022 Command Prompt variables set." -ForegroundColor Yellow

          git clone https://github.com/Silverlan/pragma.git --recurse-submodules
          cp build_windows_2.ps1 pragma/build_scripts/
          cd pragma
          & ./build_scripts/build_windows_2.ps1 -toolset "msvc-14.2" -generator "Visual Studio 17 2022" -vcvars "$vcvarsScript"
          
      - name: Handle Error
        uses: Silverlan/common_actions/action_handle_error@main
        if: failure()
        
