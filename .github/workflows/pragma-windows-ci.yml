name: Build Windows
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

#concurrency:
#  group: environment-win-${{ github.ref }}
#  cancel-in-progress: true

jobs:
  build:
    name: Build - ${{ matrix.config.os }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
          - os: windows-latest
            name: "Windows x64 MSVC"
            artifact: "Windows-MSVC.tar.xz"
            build_type: "RelWithDebInfo"
            environment_script: "C:/Program Files/Microsoft Visual Studio/2022/Enterprise/VC/Auxiliary/Build/vcvars64.bat"
            cc: "cl"
            cxx: "cl"
            archiver: "7z a"
            generators: "Visual Studio 16 2022"
            build_dir: 'build'
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      - name: Download Pragma
        shell: pwsh
        run: |
          git clone https://github.com/Silverlan/pragma.git --recurse-submodules
          cp build_windows_2.ps1 pragma/build_scripts/
          mkdir -p pragma/build_scripts/windows/
          cp Invoke-Environment.ps1 pragma/build_scripts/windows/

      - name: Preprocessing
        shell: bash
        run: |
          cp CMakeLists.txt pragma/
          cp pr_prosper_vulkan_CMakeLists.txt pragma/modules/pr_prosper_vulkan/CMakeLists.txt
          
      - name: Build Pragma
        shell: pwsh
        run: |
          cd pragma
          ./build_scripts/build_windows_2.ps1 -with_pfm -with_all_pfm_modules -with_vr -vcvars "C:/Program Files/Microsoft Visual Studio/2022/Enterprise/VC/Auxiliary/Build/vcvars64.bat" -build_directory "c:/pragma/build" -deps_directory "c:/pragma/deps"
          
      - uses: mxschmitt/action-tmate@v3.13
        shell: pwsh
        if: success() || failure()
        run: |
          cd "c:/pragma/build"
          echo "ALL BUILD FILES:"
          ls -R
          echo "----------"

      - uses: actions/upload-artifact@v3
        if: success() || failure()
        with:
          name: cmake-cache
          path: "c:/pragma/build/CMakeCache.txt"

      - uses: mxschmitt/action-tmate@v3.13
        name: CI
        if: success() || failure()
          
      - name: Create Release Files
        shell: bash
        run: |
          mkdir release
          rsync pragma/install/ release/
          
      - name: Release Binaries
        uses: Silverlan/common_actions/release_nightly_binaries@main
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit: ${{ github.ref_name }}
          
      #- uses: mxschmitt/action-tmate@v3.13
      #  name: CI
      #  if: success() || failure()

      #- name: Handle Error
      #  uses: Silverlan/common_actions/action_handle_error@main
      #  if: failure()
        
